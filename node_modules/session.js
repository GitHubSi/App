/**
 * 
 * @type @exp;session
 * @description 用户登录之后，设置用户的session
 */
var httpParam = require('./httpParam.js');
var sessions = {};
/**
 * @description 获取用户header头中的session信息
 * @param {type} res
 * @param {type} req
 * @returns {boolean} 失败返回false，成功返回当前的cookie中的SESSION
 */
var getSession = function (res, req) {
    var cookie = httpParam.COOKIE(req,'SESSION');
    if(cookie){
        var SessionID = cookie;
        return SessionID;
    }   
    return false;
};

/**
 * @description 获取当前session的状态信息,记录获取登录到网站的用户id
 * @param {type} res
 * @param {type} req
 * @returns {newSession.session|sessions|session}
 */

exports.sessionStatus = function (res, req) {
    var sessionID = getSession(res, req);
    lib.redis.exist(sessionID, function (existflg) {
        if (existflg) {
            var sessionJson = lib.redis.hget(sessionID);
            if (sessionJson.expires < Date()) {
                lib.redis.del(sessionID);
                global.userId = 0;
            }
            else {
                var dt = new Date();
                dt.setMinutes(dt.getMinutes + 30);
                sessionJson.expires = dt;
                lib.redis.hset(sesionID, sessionJson);
                global.userId = sessionJson.userId
            }
        }
    });
}
/**
 * @description 当用户登录时，设置用户的session信息
 * @param {type} res
 * @param {type} req
 * @returns {newSession.session|sessions|session}
 */
exports.setSession = function (res, req, serverid) {
    newSession(res,serverid);
}

/**
 * @description 为用户创建一个session
 * @param {objetc} res
 * @param {string} id session在服务器端的标志
 * @returns {newSession.session}
 */
function newSession(res,serverid) {
    var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghigklmnopqrstuvwxyz";
    var SESSID = '';
    for (var i = 0; i < 40; i++) {
        var num = Math.floor(Math.random() * chars.length); //获取0-39之间的一个数
        SESSID += chars.substring(num, num + 1);
    }
    lib.redis.exist(SESSID, function (existflg) {
        if (existflg) {
            SESSID = new newSession(res);
        }
        var dt = new Date();
        dt.setMinutes(dt.getMinutes() + 30);
        var session = {
            SESSID: SESSID,
            expires: dt
        };
        sessions[SESSID] = session;
        saveSession(sessions[SESSID], serverid);
        res.setHeader('Set-Cookie', 'SESSID=' + SESSID);
        res.render('home.jade', {'username': serverid});
    });
}

function cleanSession() {
    for (sess in sessions) {
        if (sess.expires < Date()) {
            delete sessions[sess.SESSID];
        }
    }
}
/**
 * 
 * @param {sessions} newSession创建的对象
 * @param {type} 服务器标志用户的id
 * @returns {undefined}
 */
function saveSession(session, id) {
    session.id = id;
    lib.redis.hmset("SESSID", {
        "SESSID":session.SESSID,
        "expires":session.expires,
        "username":session.id
    });   //哭了，加载页面之后完成了
}